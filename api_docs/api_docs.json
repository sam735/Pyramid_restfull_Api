{
  "swagger": "2.0",
  "info": {
    "description": "An API for  action that is or was performed on a patient",
    "version": "1.0.0",
    "title": "Procedure API",
    "contact": {
      "email": "you@your-company.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:6547",
  "basePath": "/api/v1.0/",
  "tags": [
    {
      "name": "admins",
      "description": "Secured Admin-only calls"
    },
    {
      "name": "admins",
      "description": "Operations available to regular developers"
    }
  ],
  "paths": {
    "/procedures": {
      "get": {
        "tags": [
          "admins"
        ],
        "summary": "searches Procedure",
        "operationId": "searchProcedure",
        "description": "By passing in the appropriate options, you can search for\navailable Procedure in the system\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ProcedureIdn",
            "description": "pass an optional ProcedureIdn for looking up Procedure",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "number of records to skip for pagination",
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "in": "query",
            "name": "limit",
            "description": "maximum number of records to return",
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 10
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcedureItem"
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "post": {
        "tags": [
          "admins"
        ],
        "summary": "adds an Procedure item",
        "operationId": "addProcedure",
        "description": "Adds an item to the system",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ProcedureItem",
            "description": "Procedure item to add",
            "schema": {
              "$ref": "#/definitions/ProcedureItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      },
      "put": {
        "tags": [
          "admins"
        ],
        "summary": "Update an existing ProcedureItem record",
        "operationId": "updateProcedure",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Procedure object that needs to be updated to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcedureItem"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid Procedure ID supplied"
          },
          "404": {
            "description": "Procedure not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "admins"
        ],
        "summary": "Deletes a ProcedureItem record",
        "description": "This API deletes a Procedure record based on the ProcedureIdn passed",
        "operationId": "deleteProcedure",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "ProcedureIdn",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Record deleted successfully"
          },
          "400": {
            "description": "Invalid Procedure ID supplied"
          },
          "404": {
            "description": "procedure ID not found"
          }
        }
      }
    }
  },
  "definitions": {
    "ProcedureItem": {
      "type": "object",
      "required": [
        "status",
        "subject"
      ],
      "properties": {
        "resourceType": {
          "type": "string"
        },
        "identifier": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Identifier"
          }
        },
        "definition": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Refrence"
          }
        },
        "basedOn": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Refrence"
          }
        },
        "partOf": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Refrence"
          }
        },
        "status": {
          "type": "string"
        },
        "notDone": {
          "type": "boolean"
        },
        "notDoneReason": {
          "type": "object",
          "$ref": "#/definitions/CodeableConcept"
        },
        "category": {
          "type": "object",
          "$ref": "#/definitions/CodeableConcept"
        },
        "code": {
          "type": "object",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "type": "object",
          "$ref": "#/definitions/Refrence"
        },
        "context": {
          "type": "object",
          "$ref": "#/definitions/Refrence"
        },
        "performedDateTime": {
          "type": "string"
        },
        "performedPeriod": {
          "type": "object",
          "$ref": "#/definitions/Period"
        },
        "performer": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "actor"
            ],
            "properties": {
              "role": {
                "type": "object",
                "$ref": "#/definitions/CodeableConcept"
              },
              "actor": {
                "type": "object",
                "$ref": "#/definitions/Refrence"
              },
              "onBehalfOf": {
                "type": "object",
                "$ref": "#/definitions/Refrence"
              }
            }
          }
        },
        "location": {
          "type": "object",
          "$ref": "#/definitions/Refrence"
        },
        "reasonCode": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "reasonReference": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Refrence"
          }
        },
        "bodySite": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "outcome": {
          "type": "object",
          "$ref": "#/definitions/CodeableConcept"
        },
        "report": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Refrence"
          }
        },
        "complication": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "complicationDetail": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Refrence"
          }
        },
        "followUp": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "note": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Annotation"
          }
        },
        "focalDevice": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "action": {
                "type": "object",
                "$ref": "#/definitions/CodeableConcept"
              },
              "manipulated": {
                "type": "object",
                "$ref": "#/definitions/Refrence"
              }
            }
          }
        },
        "usedReference": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Refrence"
          }
        },
        "usedCode": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CodeableConcept"
          }
        }
      }
    },
    "Identifier": {
      "type": "object",
      "properties": {
        "use": {
          "type": "string"
        },
        "type": {
          "type": "object",
          "properties": {
            "coding": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "system": {
                    "type": "string"
                  },
                  "Version": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  },
                  "display": {
                    "type": "string"
                  },
                  "userSelected": {
                    "type": "boolean"
                  }
                }
              }
            },
            "text": {
              "type": "string"
            }
          }
        },
        "system": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "period": {
          "type": "object",
          "properties": {
            "start": {
              "type": "string"
            },
            "end": {
              "type": "string"
            }
          }
        },
        "assigner": {
          "type": "object",
          "properties": {
            "reference": {
              "type": "string"
            },
            "display": {
              "type": "string"
            }
          }
        }
      }
    },
    "CodeableConcept": {
      "type": "object",
      "properties": {
        "coding": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "system": {
                "type": "string"
              },
              "Version": {
                "type": "string"
              },
              "code": {
                "type": "string"
              },
              "display": {
                "type": "string"
              },
              "userSelected": {
                "type": "boolean"
              }
            }
          }
        },
        "text": {
          "type": "string"
        }
      }
    },
    "Period": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string"
        },
        "end": {
          "type": "string"
        }
      }
    },
    "Annotation": {
      "type": "object",
      "properties": {
        "authorReference": {
          "type": "string"
        },
        "authorString": {
          "type": "string"
        },
        "time": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "Refrence": {
      "type": "object",
      "properties": {
        "reference": {
          "type": "string"
        },
        "identifier": {
          "type": "object",
          "$ref": "#/definitions/Identifier"
        },
        "display": {
          "type": "string"
        }
      }
    }
  }
}